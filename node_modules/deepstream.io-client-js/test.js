'use strict'
const deepstream = require('.')
const Promise = require('bluebird')

const ds = deepstream('0.0.0.0:6021')
  .login({}, (success, authData) => {
    if (!success) {
      console.log({ authData }, 'Deepstream Authentication Failed. Shutting down...')
      setTimeout(() => process.exit(1), 500)
    }
  })

ds.on('connectionStateChanged', connectionState => {
  console.log({ connectionState }, 'Deepstream Connection State Changed.')
})

ds.on('error', (error, event, topic) => {
  console.log({ error, event, topic }, 'Deepstream Error.')
})

setInterval(Promise.coroutine(function*() {
  for (let n = 0; n < 8; ++n) {
    yield updateRecord()
  }
}), 500)

let x = 0
function updateRecord () {
  console.log(x)
  return new Promise((resolve, reject) => {
    const record = ds.record.getRecord('test/1')
    record.set({ x: x++ })
    record.on( 'discard', () => {
    })
    record.discard()
    resolve()

  })
}
